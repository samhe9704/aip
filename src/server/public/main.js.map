{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-plan/add-plan.component.css","webpack:///./src/app/add-plan/add-plan.component.html","webpack:///./src/app/add-plan/add-plan.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authenticate.service.ts","webpack:///./src/app/customer-item/customer-item.component.css","webpack:///./src/app/customer-item/customer-item.component.html","webpack:///./src/app/customer-item/customer-item.component.ts","webpack:///./src/app/customer-list/customer-list.component.css","webpack:///./src/app/customer-list/customer-list.component.html","webpack:///./src/app/customer-list/customer-list.component.ts","webpack:///./src/app/customer.service.ts","webpack:///./src/app/join-member-form/join-member-form.component.css","webpack:///./src/app/join-member-form/join-member-form.component.html","webpack:///./src/app/join-member-form/join-member-form.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/menu-bar/menu-bar.component.css","webpack:///./src/app/menu-bar/menu-bar.component.html","webpack:///./src/app/menu-bar/menu-bar.component.ts","webpack:///./src/app/plan-item/plan-item.component.css","webpack:///./src/app/plan-item/plan-item.component.html","webpack:///./src/app/plan-item/plan-item.component.ts","webpack:///./src/app/plan-list/plan-list.component.css","webpack:///./src/app/plan-list/plan-list.component.html","webpack:///./src/app/plan-list/plan-list.component.ts","webpack:///./src/app/plan.service.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".add-plan-container {\\r\\n  max-width: 960px;\\r\\n  margin: 50px auto;\\r\\n}\"","module.exports = \"<div class=\\\"add-plan-container\\\">\\r\\n  <form class=\\\"ui big form\\\" #addPlanForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(addPlanForm)\\\"> \\r\\n    <h4 class=\\\"ui dividing header\\\">Plan information</h4>\\r\\n    <div class=\\\"field\\\">\\r\\n      <label>Title</label>\\r\\n        <input type=\\\"text\\\" name=\\\"title\\\" required placeholder=\\\"Title\\\" ngModel>\\r\\n      </div>\\r\\n    <div class=\\\"field\\\">\\r\\n      <label>Time</label>\\r\\n      <div class=\\\"fields\\\">\\r\\n        <div class=\\\"three wide field\\\">\\r\\n          <label>Start time</label>\\r\\n          <input type=\\\"time\\\" name=\\\"start\\\" required placeholder=\\\"Start time\\\" ngModel>\\r\\n        </div>\\r\\n        <div class=\\\"three wide field\\\">\\r\\n          <label>End time</label>\\r\\n          <input type=\\\"time\\\" name=\\\"end\\\" required placeholder=\\\"End time\\\" ngModel>\\r\\n        </div>\\r\\n        <div class=\\\"six wide field\\\">\\r\\n          <label>Week</label>\\r\\n          <input type=\\\"text\\\" name=\\\"week\\\" required placeholder=\\\"Week\\\" ngModel>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"field\\\">\\r\\n      <label>Coach</label>\\r\\n      <input type=\\\"text\\\" name=\\\"coach\\\" required placeholder=\\\"Coach\\\" ngModel>\\r\\n    </div>\\r\\n    <div class=\\\"field\\\">\\r\\n      <label>Content</label>\\r\\n      <input type=\\\"text\\\" name=\\\"content\\\" required placeholder=\\\"Training plan's content\\\" ngModel>\\r\\n    </div>\\r\\n    <div class=\\\"inline fields\\\">\\r\\n        <label>Type of training plan:</label>\\r\\n          <input type=\\\"radio\\\" required name=\\\"type\\\" value=\\\"A\\\" ngModel> A-Slim<br>\\r\\n          <input type=\\\"radio\\\" required name=\\\"type\\\" value=\\\"B\\\" ngModel> B-Muscle<br>\\r\\n          <input type=\\\"radio\\\" required name=\\\"type\\\" value=\\\"C\\\" ngModel> C-Fitness<br>\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\" [disabled]=\\\"addPlanForm.invalid\\\" class=\\\"ui submit large blue button right floated\\\">Submit</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { PlanService } from '../plan.service';\r\nimport { Plan } from '../plan';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-plan',\r\n  templateUrl: './add-plan.component.html',\r\n  styleUrls: ['./add-plan.component.css']\r\n})\r\nexport class AddPlanComponent implements OnInit {\r\n\r\n  constructor(private planService: PlanService) { }\r\n\r\n  newPlan: Plan;\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n\r\n      const formInput = Object.assign({}, form.value);\r\n\r\n      const plan: Plan = {\r\n        title: formInput.title,\r\n        time: `${formInput.start}-${formInput.end} ${formInput.week}`,\r\n        coach: formInput.coach,\r\n        content: formInput.content,\r\n        type: formInput.type,\r\n      };\r\n\r\n      this.planService.postPlan(plan)\r\n      .subscribe(data => {\r\n        console.log('posting new data');\r\n        form.reset();\r\n        this.newPlan = data;\r\n        console.log('new data posted');\r\n      });\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { CustomerListComponent } from './customer-list/customer-list.component';\r\nimport { PlanListComponent } from './plan-list/plan-list.component';\r\nimport { JoinMemberFormComponent } from './join-member-form/join-member-form.component';\r\nimport { CustomerItemComponent } from './customer-item/customer-item.component';\r\nimport { AddPlanComponent } from './add-plan/add-plan.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'plans', pathMatch: 'full' },\r\n\r\n  {path: 'register', component: RegisterComponent},\r\n\r\n  {path: 'login', component: LoginComponent },\r\n\r\n  {path: 'customers', component: CustomerListComponent },\r\n\r\n  {path: 'plans', component: PlanListComponent },\r\n\r\n  {path: 'add-plan', component: AddPlanComponent }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<!-- <div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    Welcome to {{ title }}!\\r\\n  </h1>\\r\\n  <nav>\\r\\n    <a routerLink=\\\"register\\\">Register your first account</a>\\r\\n    <a routerLink=\\\"login\\\">  Sign in</a>\\r\\n  </nav> -->\\r\\n<app-menu-bar></app-menu-bar>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'gym';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { CustomerListComponent } from './customer-list/customer-list.component';\r\nimport { JoinMemberFormComponent } from './join-member-form/join-member-form.component';\r\nimport { CustomerItemComponent } from './customer-item/customer-item.component';\r\nimport { SuiModule } from 'ng2-semantic-ui';\r\nimport { MenuBarComponent } from './menu-bar/menu-bar.component';\r\nimport { CustomerService } from './customer.service';\r\nimport { AuthenticateService } from './authenticate.service';\r\nimport { PlanService } from './plan.service';\r\nimport { PlanListComponent } from './plan-list/plan-list.component';\r\nimport { PlanItemComponent } from './plan-item/plan-item.component';\r\nimport { AddPlanComponent } from './add-plan/add-plan.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    CustomerListComponent,\r\n    JoinMemberFormComponent,\r\n    CustomerItemComponent,\r\n    MenuBarComponent,\r\n    PlanListComponent,\r\n    PlanItemComponent,\r\n    AddPlanComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    SuiModule,\r\n    FormsModule\r\n  ],\r\n  providers: [CustomerService, AuthenticateService, PlanService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { User } from './user';\r\nimport { Token } from './token';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticateService {\r\n\r\n   storageKey = 'authenticate-jwt';\r\n   loginUrl = '/api/login';\r\n   users: User[];\r\n\r\n  constructor(private router: Router,\r\n              private http: HttpClient) { }\r\n\r\n  getAuthorizationOptions() {\r\n    return {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': 'Bearer ' + this.getToken()\r\n      })\r\n    };\r\n  }\r\n\r\n  post(user: User): Observable<Token> {\r\n    console.log('posting');\r\n    console.log(user);\r\n    return this.http.post<Token>(this.loginUrl, user);\r\n  }\r\n\r\n  setToken(token: string) {\r\n    localStorage.setItem(this.storageKey, token);\r\n  }\r\n\r\n  getToken() {\r\n    console.log('getting token');\r\n    return localStorage.getItem(this.storageKey);\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return this.getToken() != null;\r\n  }\r\n\r\n  isLoggedOut() {\r\n    return this.getToken() == null;\r\n  }\r\n\r\n  logOut() {\r\n    localStorage.removeItem(this.storageKey);\r\n    console.log(this.storageKey);\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div class=\\\"ui cards\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"content\\\">\\r\\n     \\r\\n      <div class=\\\"header\\\">\\r\\n        {{customer.firstName}} {{customer.lastName}}\\r\\n      </div>\\r\\n      <div class=\\\"meta\\\">\\r\\n        {{customer.phone}}\\r\\n      </div>\\r\\n      <div class=\\\"description\\\">\\r\\n        {{customer.email}}\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"extra content\\\">\\r\\n      <div class=\\\"ui three buttons\\\">\\r\\n        <button class=\\\"ui basic green button\\\">Approve</button>\\r\\n        <button class=\\\"ui basic blue button\\\">Modify</button>\\r\\n        <button class=\\\"ui basic red button\\\">Decline</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\"","import { Component, OnInit, Input, HostBinding } from '@angular/core';\r\nimport { Customer } from '../customer';\r\nimport { CustomerService } from '../customer.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-item',\r\n  templateUrl: './customer-item.component.html',\r\n  styleUrls: ['./customer-item.component.css']\r\n})\r\nexport class CustomerItemComponent implements OnInit {\r\n\r\n  @Input() customer: Customer;\r\n  @HostBinding('class') columnClass = 'four wide column';\r\n  constructor(/*private customers: CustomerService*/) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // this.customerService.deleteCustomer(customer.id).subscribe();\r\n\r\n}\r\n","module.exports = \".container {\\r\\n  margin-top: 50px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"ui container\\\">\\r\\n  <div class=\\\"ui grid\\\">\\r\\n    <app-customer-item *ngFor=\\\"let customer of customers | async\\\" [customer]=\\\"customer\\\">\\r\\n        <!-- <div class=\\\"extra content\\\">\\r\\n            <div class=\\\"ui three buttons\\\">\\r\\n              <button class=\\\"ui basic green button\\\">Approve</button>\\r\\n              <button class=\\\"ui basic blue button\\\">Modify</button>\\r\\n              <button class=\\\"ui basic red button\\\">Decline</button>\\r\\n            </div>\\r\\n          </div> -->\\r\\n    </app-customer-item>\\r\\n    \\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Customer } from '../customer';\r\n\r\nimport { CustomerService } from '../customer.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-customer-list',\r\n  templateUrl: './customer-list.component.html',\r\n  styleUrls: ['./customer-list.component.css']\r\n})\r\nexport class CustomerListComponent implements OnInit {\r\n\r\n  customers: Observable<Customer[]>;\r\n\r\n  selectedCustomer: Customer;\r\n\r\n  constructor(private customerService: CustomerService) { }\r\n\r\n  getCustomers(): void {\r\n    this.customers = this.customerService.getCustomers();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getCustomers();\r\n  }\r\n\r\n  // onSelect(customer: Customer): void {\r\n  //   this.selectedCustomer = customer;\r\n  // }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Customer } from './customer';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { AuthenticateService } from './authenticate.service';\r\nimport { map, catchError } from 'rxjs/operators';\r\n// import 'rxjs/add/operator/map';\r\n// import { Http, Response } from '@angular/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n  uri = '/api/customers';\r\n  registerUrl = '/api/register';\r\n\r\n    customers: Customer[];\r\n\r\n    httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'\r\n      })\r\n    };\r\n\r\n  constructor(private http: HttpClient, private authenticate: AuthenticateService) { }\r\n\r\n\r\n\r\n  getCustomers(): Observable<Customer[]> {\r\n    return this.http.get<Customer[]>(this.uri, this.authenticate.getAuthorizationOptions());\r\n  }\r\n\r\n  postCustomer(customer: Customer): Observable<Customer> {\r\n    return this.http.post<Customer>(this.registerUrl, customer, this.httpOptions);\r\n  }\r\n\r\n  // deleteCustomer (id: number): Observable<{}> {\r\n  //   const url = `${this.uri}/${id}`; // DELETE api/heroes/42\r\n  //   return this.http.delete(url, this.httpOptions);\r\n  //     // .pipe(\r\n  //     //   catchError(this.handleError('deleteHero'))\r\n  //     // );\r\n  // }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"join-container\\\">\\r\\n  <Form>\\r\\n    <div class=\\\"field\\\">\\r\\n      <label>First Name</label>\\r\\n      <input type=\\\"text\\\" name=\\\"firstName\\\" placeholder=\\\"First Name\\\" ngModel>\\r\\n    </div>\\r\\n    <div class=\\\"field\\\">\\r\\n      <label>Last Name</label>\\r\\n      <input type=\\\"text\\\" name=\\\"lastName\\\" placeholder=\\\"Last Name\\\" ngModel>\\r\\n    </div>\\r\\n    <div class=\\\"field\\\">\\r\\n      <label>Phone</label>\\r\\n      <input type=\\\"text\\\" name=\\\"Phone\\\" placeholder=\\\"Phone\\\" ngModel>\\r\\n    </div>\\r\\n    <div class=\\\"field\\\">\\r\\n      <label>Email</label>\\r\\n      <input type=\\\"text\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" ngModel>\\r\\n    </div>\\r\\n    <div class=\\\"field\\\">\\r\\n      <label>Address</label>\\r\\n      <input type=\\\"text\\\" name=\\\"address\\\" placeholder=\\\"Address\\\" ngModel>\\r\\n    </div>\\r\\n    <div class=\\\"field\\\">\\r\\n      <label>Date of Birth</label>\\r\\n      <input type=\\\"text\\\" name=\\\"dob\\\" placeholder=\\\"DOB\\\" ngModel>\\r\\n    </div>\\r\\n\\r\\n    <button type=\\\"submit\\\" class=\\\"btn-success\\\">Regster</button>\\r\\n    \\r\\n  </Form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-join-member-form',\r\n  templateUrl: './join-member-form.component.html',\r\n  styleUrls: ['./join-member-form.component.css']\r\n})\r\nexport class JoinMemberFormComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".login-container {\\r\\n    max-width: 500px;\\r\\n    margin: 50px auto;\\r\\n  }\"","module.exports = \"<div class=\\\"login-container\\\">\\r\\n  <form class=\\\"ui big form\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(loginForm)\\\">\\r\\n    <div class=\\\"field\\\">\\r\\n    <label>Username</label>\\r\\n    <input type=\\\"text\\\" required name=\\\"username\\\" placeholder=\\\"Enter your username\\\" ngModel>\\r\\n  </div>\\r\\n  <div class=\\\"field\\\">\\r\\n    <label>Password</label>\\r\\n    <input type=\\\"password\\\" required name=\\\"password\\\" placeholder=\\\"Enter your password\\\" ngModel>\\r\\n  </div>\\r\\n  \\r\\n  <button type=\\\"submit\\\" class=\\\"ui primary button float right floated\\\"\\r\\n         [disabled]=\\\"loginForm.invalid\\\">Login</button>\\r\\n  </form>\\r\\n  </div>\\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport { CustomerService } from '../customer.service';\r\nimport { AuthenticateService } from '../authenticate.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private authenticate: AuthenticateService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    const input = form.value;\r\n\r\n      console.log(input);\r\n    const payload = {\r\n      username: input.username,\r\n      password: input.password\r\n    };\r\n\r\n    console.log('onSubmit');\r\n\r\n    this.authenticate.post(payload)\r\n    .subscribe(data => {\r\n      console.log('subscribing');\r\n      console.log(data);\r\n      this.authenticate.setToken(data.token);\r\n      console.log(data.token);\r\n\r\n      this.router.navigate(['/customers']);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"ui menu header\\\">\\r\\n  <div class=\\\"ui container\\\">\\r\\n    <div class=\\\"item\\\">\\r\\n      <a routerLink=\\\"../customers\\\" aria-label=\\\"Customer Dashboard\\\">\\r\\n        <i class=\\\"icon users large blue\\\" aria-hidden=\\\"true\\\"></i>\\r\\n      </a>\\r\\n    </div>\\r\\n      <div class=\\\"header item\\\">\\r\\n        <h1>Customer Dashboard</h1>\\r\\n      </div>\\r\\n      <div class=\\\"item\\\" *ngIf=\\\"authenticate.isLoggedOut()\\\">\\r\\n        <a routerLink=\\\"../register\\\">\\r\\n        <button class=\\\"ui basic button\\\">\\r\\n          <i class=\\\"add user icon\\\" aria-hideen=\\\"true\\\">\\r\\n            Sign Up\\r\\n          </i>\\r\\n        </button>\\r\\n        </a>\\r\\n        <!-- <div class=\\\"item\\\"> -->\\r\\n          <a routerLink=\\\"../login\\\">\\r\\n          <button class=\\\"ui basic button\\\">\\r\\n            <i class=\\\"add user icon\\\" aria-hideen=\\\"true\\\">\\r\\n              Sign In\\r\\n            </i>\\r\\n          </button>\\r\\n          </a>\\r\\n      <!-- </div> -->\\r\\n    </div>\\r\\n    <div class=\\\"header item\\\">\\r\\n      <a routerLink=\\\"../plans\\\">\\r\\n      <button class=\\\"ui basic button\\\">\\r\\n        <i class=\\\"user circle outline icon\\\" aria-hidden=\\\"true\\\">\\r\\n          View Plan\\r\\n        </i>\\r\\n      </button>\\r\\n    </a>\\r\\n    <a routerLink=\\\"../add-plan\\\">\\r\\n      <button class=\\\"ui basic button\\\" *ngIf=\\\"authenticate.isLoggedIn()\\\">\\r\\n        <i class=\\\"user circle outline icon\\\" aria-hidden=\\\"true\\\">\\r\\n          Add Plan\\r\\n        </i>\\r\\n      </button>\\r\\n    </a>\\r\\n    </div>\\r\\n    <div class=\\\"right menu\\\" *ngIf=\\\"authenticate.isLoggedIn()\\\">\\r\\n      <button class=\\\"ui primary button logout\\\" (click)=\\\"logout()\\\">logout</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticateService } from '../authenticate.service';\r\n\r\n@Component({\r\n  selector: 'app-menu-bar',\r\n  templateUrl: './menu-bar.component.html',\r\n  styleUrls: ['./menu-bar.component.css']\r\n})\r\nexport class MenuBarComponent implements OnInit {\r\n\r\n  constructor(private authenticate: AuthenticateService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  logout() {\r\n    this.authenticate.logOut();\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div class=\\\"ui cards\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"content\\\">\\r\\n       \\r\\n        <div class=\\\"header\\\">\\r\\n          {{plan.title}}\\r\\n        </div>\\r\\n        <div class=\\\"meta\\\">\\r\\n          {{plan.time}}\\r\\n        </div>\\r\\n        <div class=\\\"description\\\">\\r\\n          {{plan.content}}\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"extra content\\\">\\r\\n        <div class=\\\"ui three buttons\\\">\\r\\n          <button class=\\\"ui basic green button\\\">Approve</button>\\r\\n          <button class=\\\"ui basic blue button\\\">Modify</button>\\r\\n          <button class=\\\"ui basic red button\\\">Decline</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    </div>\"","import { Component, OnInit, Input, HostBinding } from '@angular/core';\r\nimport { Plan } from '../plan';\r\n\r\n@Component({\r\n  selector: 'app-plan-item',\r\n  templateUrl: './plan-item.component.html',\r\n  styleUrls: ['./plan-item.component.css']\r\n})\r\nexport class PlanItemComponent implements OnInit {\r\n\r\n  @Input() plan: Plan;\r\n  @HostBinding('class') columnClass = 'four wide column';\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".container {\\r\\n    margin-top: 50px;\\r\\n  }\"","module.exports = \"<div class=\\\"ui container\\\">\\r\\n     <div class=\\\"ui grid\\\">\\r\\n       <app-plan-item *ngFor=\\\"let plan of plans | async\\\" [plan]=\\\"plan\\\"></app-plan-item>\\r\\n     </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PlanService } from '../plan.service';\r\nimport { Plan } from '../plan';\r\n\r\n@Component({\r\n  selector: 'app-plan-list',\r\n  templateUrl: './plan-list.component.html',\r\n  styleUrls: ['./plan-list.component.css']\r\n})\r\nexport class PlanListComponent implements OnInit {\r\n\r\n  plans: Observable<Plan[]>;\r\n\r\n  constructor(private planService: PlanService) { }\r\n\r\n  getPlans(): void {\r\n    this.plans = this.planService.getPlans();\r\n  }\r\n\r\n  ngOnInit() {\r\n    return this.getPlans();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { AuthenticateService } from './authenticate.service';\r\nimport { Plan } from './plan';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanService {\r\n\r\n  planUrl = '/api/plans';\r\n  addPlanrUrl = '/api/add-plan';\r\n\r\n    plans: Plan[];\r\n\r\n    httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'\r\n      })\r\n    };\r\n  constructor(private http: HttpClient, private authenticate: AuthenticateService) { }\r\n\r\n  getPlans(): Observable<Plan[]> {\r\n    return this.http.get<Plan[]>(this.planUrl, this.authenticate.getAuthorizationOptions());\r\n  }\r\n\r\n  postPlan(plan: Plan): Observable<Plan> {\r\n    return this.http.post<Plan>(this.addPlanrUrl, plan, this.authenticate.getAuthorizationOptions());\r\n  }\r\n}\r\n","module.exports = \".register-container {\\r\\n    max-width: 500px;\\r\\n    margin: 50px auto;\\r\\n  }\"","module.exports = \"<div class=\\\"register-container\\\">\\r\\n  <form class=\\\"ui big form\\\" #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(registerForm)\\\">\\r\\n    <div class=\\\"field\\\">\\r\\n      <label>First Name</label>\\r\\n      <input type=\\\"text\\\" required name=\\\"firstName\\\" placeholder=\\\"First Name\\\" ngModel>\\r\\n    </div>\\r\\n    <div class=\\\"field\\\">\\r\\n      <label>Last Name</label>\\r\\n      <input type=\\\"text\\\" required name=\\\"lastName\\\" placeholder=\\\"Last Name\\\" ngModel>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"field\\\">\\r\\n      <label for=\\\"phone\\\">Phone</label>\\r\\n      <input type=\\\"number\\\" required minlength=\\\"10\\\" name=\\\"phone\\\" placeholder=\\\"Phone\\\" ngModel>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"field\\\">\\r\\n      <label>Email</label>\\r\\n      <input type=\\\"email\\\" required name=\\\"email\\\" placeholder=\\\"Email\\\" ngModel>\\r\\n    </div>\\r\\n    <div class=\\\"inline fields\\\">\\r\\n        <label>Interested training plan:</label>\\r\\n          <input type=\\\"radio\\\" required name=\\\"type\\\" value=\\\"A\\\" ngModel> A-Slim<br>\\r\\n          <input type=\\\"radio\\\" required name=\\\"type\\\" value=\\\"B\\\" ngModel> B-Muscle<br>\\r\\n          <input type=\\\"radio\\\" required name=\\\"type\\\" value=\\\"C\\\" ngModel> C-Fitness<br>\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\" class=\\\"ui primary button float right floated\\\"\\r\\n    [disabled]=\\\"registerForm.invalid\\\">Register</button>\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { CustomerService } from '../customer.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Customer } from '../customer';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  newCustomer: Customer;\r\n\r\n  constructor(private customerService: CustomerService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  onSubmit(form: NgForm) {\r\n\r\n    const formInput = Object.assign({}, form.value);\r\n\r\n    const customer: Customer = {\r\n      firstName: formInput.firstName,\r\n      lastName: formInput.lastName,\r\n      phone: formInput.phone,\r\n      email: formInput.email,\r\n      type: formInput.type\r\n    };\r\n\r\n    this.customerService.postCustomer(customer)\r\n    .subscribe(data => {\r\n      console.log('posting new data');\r\n      form.reset();\r\n      this.newCustomer = data;\r\n      console.log('new data posted');\r\n    });\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  url: '/gym'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}